name: Build without Dockerimage

on:
  push:
    branches: [ build-test ]
  workflow_dispatch:

jobs:
  build_python:
    name: Build python
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        emscripten: [ '3.1.26', '3.1.27', '3.1.28', '3.1.29', '3.1.30', '3.1.31', '3.1.32', '3.1.33', '3.1.34', '3.1.35', '3.1.36', '3.1.37', '3.1.38', '3.1.39', '3.1.40', '3.1.41', '3.1.42', '3.1.43', '3.1.44', '3.1.45', '3.1.46', '3.1.47', '3.1.48', '3.1.49', '3.1.50', '3.1.51' ]
    container: 'emscripten/emsdk:${{ matrix.emscripten }}'
    steps:
      - name: Install requirements
        run: |
          apt-get update -y
          apt-get install -y zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev
      - name: Prebuild static libraries
        run: |
          embuilder build zlib bzip2 MINIMAL_PIC
          embuilder --pic build zlib bzip2 MINIMAL_PIC
      - name: Checkout python
        uses: actions/checkout@v4
        with:
          repository: python/cpython
          ref: '3.12'
      - name: Build python interpreter
        run: |
          mkdir -p builddir/build
          cd builddir/build
          ../../configure -C
          make -j$(nproc)
      - name: Build python to wasm32-emscripten
        run: |
          mkdir -p builddir/emscripten-browser
          cd builddir/emscripten-browser
          CONFIG_SITE=../../Tools/wasm/config.site-wasm32-emscripten \
            emconfigure ../../configure -C \
              --host=wasm32-unknown-emscripten \
              --build=$(../../config.guess) \
              --with-emscripten-target=browser \
              --with-build-python=$(pwd)/../build/python
          emmake make -j$(nproc)
      - name: Verify build
        run: |
          if [ ! -f python.html ]; then
              echo "python.html not found"
              exit 1
          fi
